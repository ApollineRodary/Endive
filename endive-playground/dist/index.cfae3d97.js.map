{"mappings":"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","sources":["src/scripts/blocks.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nBlockly.defineBlocksWithJsonArray([\n  // Theorems and lemmas\n  {\n    type: \"theorem\",\n    message0: \"Théorème: %1 Preuve: %2 %3\",\n    args0: [\n      {\n        type: \"input_value\",\n        name: \"STATEMENT\",\n      },\n      {\n        type: \"input_end_row\",\n      },\n      {\n        type: \"input_statement\",\n        name: \"PROOF\",\n      },\n    ],\n    inputsInline: false,\n    colour: 300,\n    tooltip: \"\",\n    helpUrl: \"\",\n  },\n\n  // Statements\n  {\n    type: \"proposition_forall\",\n    message0: \"Pour tout %1:%2 , %3\",\n    args0: [\n      {\n        type: \"field_variable\",\n        name: \"VARIABLE\",\n        variable: \"x\",\n        variableTypes: [\"MathObject\"],\n        defaultType: \"MathObject\",\n      },\n      {\n        type: \"field_variable\",\n        name: \"TYPE\",\n        variable: \"Prop\",\n        variableTypes: [\"Type\"],\n        defaultType: \"Type\",\n      },\n      {\n        type: \"input_value\",\n        name: \"PROPOSITION\",\n      },\n    ],\n    output: null,\n    colour: 65,\n    tooltip: \"\",\n    helpUrl: \"\",\n  },\n\n  {\n    type: \"proposition_reference\",\n    message0: \"%1\",\n    args0: [\n      {\n        type: \"field_variable\",\n        name: \"NAME\",\n        variable: \"x\",\n        variableTypes: [\"MathObject\"],\n        defaultType: \"MathObject\",\n      },\n    ],\n    output: null,\n    colour: 65,\n    tooltip: \"\",\n    helpUrl: \"\",\n  },\n\n  // Tactics\n  {\n    type: \"tactic_let\",\n    message0: \"Soit %1 dans %2.\",\n    args0: [\n      {\n        type: \"field_variable\",\n        name: \"VARIABLE\",\n        variable: \"x\",\n        variableTypes: [\"MathObject\"],\n        defaultType: \"MathObject\",\n      },\n      {\n        type: \"field_variable\",\n        name: \"TYPE\",\n        variable: \"Prop\",\n        variableTypes: [\"Type\"],\n        defaultType: \"Type\",\n      },\n    ],\n    inputsInline: true,\n    previousStatement: null,\n    nextStatement: null,\n    colour: 170,\n    tooltip: \"\",\n    helpUrl: \"\",\n  },\n\n  {\n    type: \"tactic_suppose\",\n    message0: \"Supposons %1.\",\n    args0: [\n      {\n        type: \"input_value\",\n        name: \"HYPOTHESIS\",\n      },\n    ],\n    previousStatement: null,\n    nextStatement: null,\n    colour: 170,\n    tooltip: \"\",\n    helpUrl: \"\",\n  },\n\n  {\n    type: \"tactic_then\",\n    message0: \"Alors, %1.\",\n    args0: [\n      {\n        type: \"input_value\",\n        name: \"CONCLUSION\",\n      },\n    ],\n    previousStatement: null,\n    nextStatement: null,\n    colour: 170,\n    tooltip: \"\",\n    helpUrl: \"\",\n  },\n\n  // Definitions\n  {\n    type: \"definition_inductive_type\",\n    message0: \"Type inductif : %1 %2 Constructeurs : %3 %4\",\n    args0: [\n      {\n        type: \"field_variable\",\n        name: \"NAME\",\n        variable: \"N\",\n        variableTypes: [\"Type\"],\n        defaultType: \"Type\",\n      },\n      {\n        type: \"input_end_row\",\n      },\n      {\n        type: \"input_end_row\",\n      },\n      {\n        type: \"input_statement\",\n        name: \"CONSTRUCTORS\",\n      },\n    ],\n    inputsInline: false,\n    colour: 30,\n    tooltip: \"\",\n    helpUrl: \"\",\n  },\n\n  {\n    type: \"definition_simple_constructor\",\n    message0: \"%1\",\n    args0: [\n      {\n        type: \"field_variable\",\n        name: \"NAME\",\n        variable: \"zero\",\n        variableTypes: [\"Constructor\"],\n        defaultType: \"Constructor\",\n      },\n    ],\n    previousStatement: null,\n    nextStatement: null,\n    colour: 50,\n  },\n\n  {\n    type: \"definition_arrow_constructor\",\n    message0: \"%1: %2\",\n    args0: [\n      {\n        type: \"field_variable\",\n        name: \"NAME\",\n        variable: \"S\",\n        variableTypes: [\"Constructor\"],\n        defaultType: \"Constructor\",\n      },\n      {\n        type: \"input_value\",\n        name: \"PARAMETERS\",\n      },\n    ],\n    previousStatement: null,\n    nextStatement: null,\n    colour: 50,\n  },\n\n  {\n    type: \"definition_arrow_param\",\n    message0: \"%1 → %2\",\n    args0: [\n      {\n        type: \"field_variable\",\n        name: \"PARAMETER\",\n        variableTypes: [\"Type\"],\n        defaultType: \"Type\",\n      },\n      {\n        type: \"input_value\",\n        name: \"NEXT\",\n      },\n    ],\n    output: null,\n    colour: 50,\n  },\n\n  {\n    type: \"definition_arrow_end\",\n    message0: \"this\",\n    args0: [],\n    output: null,\n    colour: 50,\n  },\n]);\n\nBlockly.Blocks[\"proposition_implies\"] = {\n  init: function () {\n    this.appendValueInput(\"ANTECEDENT\");\n    this.appendValueInput(\"CONSEQUENT\").appendField(\"⇒\");\n    this.setOutput(true, null);\n    this.setColour(65);\n    this.inputsInline = true;\n    let thisBlock = this;\n    this.svgGroup_.addEventListener(\"dblclick\", function (event) {\n      thisBlock.inputsInline = !thisBlock.inputsInline;\n      thisBlock.setInputsInline(thisBlock.inputsInline);\n      event.stopPropagation();\n    });\n  },\n};\n\nBlockly.Extensions.register(\"dynamic_type_dropdown\", function () {\n  let thisBlock = this;\n  this.getInput(\"TYPE\").appendField(\n    new Blockly.FieldDropdown(function () {\n      return customTypes.map((t) => [t[0], t[0].toUpperCase()]);\n    }),\n  );\n});\n"],"names":[],"version":3,"file":"index.cfae3d97.js.map","sourceRoot":"/__parcel_source_root/"}